Ubuntu (Debian 패키지)
======================

ROS 2 Humble Hawksbill의 Debian 패키지는 현재 Ubuntu Jammy용으로 제공되고 있습니다.

여기서 로봇과 PC 둘 다 설치를 진행하면 됩니다.

PC에서 로봇에 접속한 다음 진행하는게 편할 수 있습니다.


자료
----

* 상태 페이지:

  * ROS 2 Humble (Ubuntu Jammy): `amd64 <http://repo.ros2.org/status_page/ros_humble_default.html>`__, `arm64 <http://repo.ros2.org/status_page/ros_humble_ujv8.html>`__
* `Jenkins 인스턴스 <http://build.ros2.org/>`__
* `저장소 <http://repo.ros2.org>`__


로케일 설정
-----------

Make sure you have a locale which supports ``UTF-8``.
If you are in a minimal environment (such as a docker container), the locale may be something minimal like ``POSIX``.
We test with the following settings. However, it should be fine if you're using a different UTF-8 supported locale.

.. code-block:: bash

   locale  # check for UTF-8

   sudo apt update && sudo apt install locales
   sudo locale-gen en_US en_US.UTF-8
   sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
   export LANG=en_US.UTF-8

   locale  # verify settings

소스 설정
---------

ROS 2 apt 저장소를 시스템에 추가해야 합니다.

먼저 `Ubuntu Universe 저장소 <https://help.ubuntu.com/community/Repositories/Ubuntu>`__ 가 활성화되어 있는지 확인하세요.

.. code-block:: bash

   sudo apt install software-properties-common
   sudo add-apt-repository universe

이제 apt로 ROS 2 GPG 키를 추가하세요.

.. code-block:: bash

   sudo apt update && sudo apt install curl -y
   sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

그런 다음 저장소를 소스 목록에 추가하세요.

.. code-block:: bash

   echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

ROS 2 패키지 설치
-----------------

저장소를 설정한 후 apt 저장소 캐시를 업데이트하세요.

.. code-block:: bash

   sudo apt update

ROS 2 패키지는 자주 업데이트되는 Ubuntu 시스템에서 빌드됩니다.

새로운 패키지를 설치하기 전에 시스템이 최신 상태인지 항상 확인하는 것이 좋습니다.

.. code-block:: bash

   sudo apt upgrade


.. warning::

   Ubuntu 22.04의 초기 업데이트로 인해, ROS 2를 설치하기 전에 ``systemd`` 및 ``udev`` 관련 패키지를 업데이트하는 것이 중요합니다.
   업그레이드 없이 새로 설치된 시스템에서 ROS 2의 의존성을 설치하면 **핵심 시스템 패키지의 제거** 가 발생할 수 있습니다.

   자세한 내용은 `ros2/ros2#1272 <https://github.com/ros2/ros2/issues/1272>`_ 및 `Launchpad #1974196 <https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1974196>`_ 를 참조하세요.

데스크탑 설치 (추천): ROS, RViz, 데모, 튜토리얼.

.. code-block:: bash

   sudo apt install ros-humble-desktop

ROS-Base 설치 (기본): 통신 라이브러리, 메시지 패키지, 명령줄 도구.
GUI 도구 없음.

.. code-block:: bash

   sudo apt install ros-humble-ros-base

개발 도구: ROS 패키지를 빌드하기 위한 컴파일러 및 기타 도구

.. code-block:: bash

   sudo apt install ros-dev-tools

환경 설정
---------

설정 스크립트 소싱
^^^^^^^^^^^^^^^^^^

다음 파일을 소싱하여 환경을 설정하세요.

.. code-block:: bash

   # bash이 아닌 다른 쉘을 사용하는 경우 ".bash"을 쉘 이름으로 바꾸세요
   # 가능한 값: setup.bash, setup.sh, setup.zsh
   source /opt/ros/humble/setup.bash

예제 시도
---------

대화형-수신자
^^^^^^^^^^^^

``ros-humble-desktop`` 을 설치했다면, 몇 가지 예제를 시도해볼 수 있습니다.

한 터미널에서, 설정 파일을 소싱한 다음 C++ ``talker`` 을 실행하세요:

.. code-block:: bash

   source /opt/ros/humble/setup.bash
   ros2 run demo_nodes_cpp talker

다른 터미널에서 설정 파일을 소싱한 다음 Python ``listener`` 를 실행하세요:

.. code-block:: bash

   source /opt/ros/humble/setup.bash
   ros2 run demo_nodes_py listener

``talker`` 이 메시지를 ``Publishing`` 하고 있다고 말하는 것과 ``listener`` 가 그 메시지를 ``I heard`` 라고 말하는 것을 볼 수 있어야 합니다.
이것은 C++ 및 Python API가 제대로 작동하고 있음을 확인합니다.

만세!

설치 후 다음 단계
-----------------
환경을 구성하고, 자신의 워크스페이스 및 패키지를 생성하고, ROS 2 핵심 개념을 배우기 위해 튜토리얼을 계속 진행하세요.

ROS 1 브릿지 사용
----------------
ROS 1 브릿지는 ROS 1과 ROS 2 사이의 토픽을 연결할 수 있습니다. ROS 1 브릿지를 빌드하고 사용하는 방법에 대한 전용 `문서 <https://github.com/ros2/ros1_bridge/blob/master/README.md>`__ 를 참조하세요.

추가 RMW 구현 (선택 사항)
-------------------------
ROS 2가 사용하는 기본 미들웨어는 ``Fast DDS`` 이지만, 런타임에 미들웨어(RMW)를 교체할 수 있습니다.
여러 RMW와 작업하는 방법에 대한 `가이드 <https://docs.ros.org/en/humble/How-To-Guides/Working-with-multiple-RMW-implementations.html>`__ 를 참조하세요.

문제 해결
---------

문제 해결 기법은 `여기 <https://docs.ros.org/en/humble/How-To-Guides/Installation-Troubleshooting.html>`__ 에서 찾을 수 있습니다.

제거
----

이미 바이너리에서 설치한 후 ROS 2를 제거하거나 소스 기반 설치로 전환해야 하는 경우, 다음 명령을 실행하세요:

.. code-block:: bash

  sudo apt remove ~nros-humble-* && sudo apt autoremove

저장소도 제거하고 싶을 수 있습니다:

.. code-block:: bash

  sudo rm /etc/apt/sources.list.d/ros2.list
  sudo apt update
  sudo apt autoremove
  # Consider upgrading for packages previously shadowed.
  sudo apt upgrade